[{"content":"在网页的页脚增加 cc 协议的图标  先在 cc 官网把对应的 svg 图标下载下来，将其放在 assets\\icons 下，我是在这个目录下新建了目录 cc-icons 并放在里。 在文件 layouts/partials/footer/footer.html 中 \u0026lt;section class=\u0026quot;powerby\u0026quot;\u0026gt; 的部分添加下面的代码  1 2 3 4 5 6 7 8 9 10  {{ if .Site.Params.footer.ccLicenseIcon }}  \u0026lt;div class=\u0026#34;cc-license-icons\u0026#34;\u0026gt;  \u0026lt;a rel=\u0026#34;license\u0026#34; href=\u0026#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\u0026#34; target=\u0026#34;_blank\u0026#34; title=\u0026#34;Licensed Under CC BY-NC-SA 4.0\u0026#34;\u0026gt;  \u0026lt;i class=\u0026#34;cc-icon-cc\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;cc-icons/cc\u0026#34; }} \u0026lt;/i\u0026gt;  \u0026lt;i class=\u0026#34;cc-icon-by\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;cc-icons/by\u0026#34; }} \u0026lt;/i\u0026gt;  \u0026lt;i class=\u0026#34;cc-icon-nc\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;cc-icons/nc\u0026#34; }} \u0026lt;/i\u0026gt;  \u0026lt;i class=\u0026#34;cc-icon-sa\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;cc-icons/sa\u0026#34; }} \u0026lt;/i\u0026gt;  \u0026lt;/a\u0026gt;  \u0026lt;/div\u0026gt; {{ end }}   在 assets/scss/partials/footer.scss 中 .powerby 的后面添加下面的代码  1 2 3 4 5 6 7  .cc-license-icons {  svg {  width: 20px;  height: 20px;  color: var(--body-text-color);  } }   在 config.yaml 中 footer 的部分添加 ccLicenseIcon: true 配置项  1 2 3 4  footer:since:customText:ccLicenseIcon:true  标题与图标对齐 将右侧小部件的标题与图标移到一行并对齐\n修改样式  在文件 assets/scss/partials/widgets.scss 中 widget-icon 的下面添加下面的代码  1 2 3 4 5 6 7 8 9 10 11  .widget-icon-title {  svg {  width: 32px;  height: 32px;  //stroke-width: 1.6;  color: var(--body-text-color);  }   display: flex;  align-items: center; }   在文件 assets/scss/style.scss 的最后添加  1 2 3 4 5 6 7 8 9 10 11 12 13  .has-icon-section-title {  text-transform: uppercase;  margin-top: 0;  margin-bottom: 0;  display: block;  font-size: 2.25rem;  font-weight: bold;  color: var(--body-text-color);   a {  color: var(--body-text-color);  } }   修改标题和图标 修改 archives、tag-cloud、文章目录的标题和图标\n archives 的相关修改在文件 layouts/_default/single.html 中。将下面的部分  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  {{ define \u0026#34;right-sidebar\u0026#34; }}  {{ if (.Scratch.Get \u0026#34;hasTOC\u0026#34;) }}  \u0026lt;aside class=\u0026#34;sidebar right-sidebar sticky\u0026#34;\u0026gt;  \u0026lt;section class=\u0026#34;widget archives\u0026#34;\u0026gt;  \u0026lt;div class=\u0026#34;widget-icon-title\u0026#34;\u0026gt;  {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;hash\u0026#34; }}  \u0026lt;/div\u0026gt;  \u0026lt;h2 class=\u0026#34;widget-title section-title\u0026#34;\u0026gt;{{ T \u0026#34;article.tableOfContents\u0026#34; }}\u0026lt;/h2\u0026gt;   \u0026lt;div class=\u0026#34;widget--toc\u0026#34;\u0026gt;  {{ .TableOfContents }}  \u0026lt;/div\u0026gt;  \u0026lt;/section\u0026gt;  \u0026lt;/aside\u0026gt;  {{ end }} {{ end }}   修改成\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  {{ define \u0026#34;right-sidebar\u0026#34; }}  {{ if (.Scratch.Get \u0026#34;hasTOC\u0026#34;) }}  \u0026lt;aside class=\u0026#34;sidebar right-sidebar sticky\u0026#34;\u0026gt;  \u0026lt;section class=\u0026#34;widget archives\u0026#34;\u0026gt;  \u0026lt;div class=\u0026#34;widget-icon-title\u0026#34;\u0026gt;  {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;hash\u0026#34; }} \u0026amp;nbsp;\u0026amp;nbsp;  \u0026lt;h2 class=\u0026#34;widget-title section-title\u0026#34;\u0026gt;{{ T \u0026#34;article.tableOfContents\u0026#34; }}\u0026lt;/h2\u0026gt;  \u0026lt;/div\u0026gt;   \u0026lt;div class=\u0026#34;widget--toc\u0026#34;\u0026gt;  {{ .TableOfContents }}  \u0026lt;/div\u0026gt;  \u0026lt;/section\u0026gt;  \u0026lt;/aside\u0026gt;  {{ end }} {{ end }}   为了显得不那么紧凑在中间加了两个空格\ntag-cloud 和文章目录的修改方式和这个一致，分别在文件 layouts/partials/widget/tag-cloud.html(大概第3行) 和 layouts/partials/widget/archives.html(大概第5行) 中。  左侧站点信息居中 头像、站点名称、描述 修改文件 assets/scss/partials/sidebar.scss\n头像 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  .site-avatar {  position: relative;  margin: 0;  margin-left: auto; //站点头像居中  margin-right: auto; //站点头像居中  width: var(--sidebar-avatar-size);  height: var(--sidebar-avatar-size);   margin-bottom: var(--sidebar-element-separation);   .site-logo {  width: 100%;  height: 100%;  border-radius: 100%;  box-shadow: var(--shadow-l1);  }   站点名称 1 2 3 4 5 6 7 8 9 10   .site-name {  color: var(--accent-color);  text-align: center; //站点名称居中  font-size: 1.8rem;   @include respond(2xl) {  font-size: 2rem;  } }   站点描述 1 2 3 4 5 6 7 8 9 10  .site-description {  color: var(--body-text-color);  font-weight: normal;  text-align: center; //站点描述居中  font-size: 1.6rem;   @include respond(2xl) {  font-size: 1.8rem;  } }   社交链接图标 修改文件 assets/scss/partials/menu.scss\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  .social-menu {  list-style: none;  padding: 0%;  display: flex;  flex-direction: row;  gap: 10px;  justify-content: center;   svg {  width: 24px;  height: 24px;  stroke: var(--body-text-color);  stroke-width: 1.33;  } }   增加文章字数统计 这个根据主题的阅读时间修改，所以就嵌合到一起了 在文件 layouts/partials/article/components/details.html 中 {{ if .Site.Params.article.readingTime }} 部分增加\n1 2 3 4 5 6  \u0026lt;div\u0026gt;  {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;brush\u0026#34; }}  \u0026lt;time class=\u0026#34;article-words\u0026#34;\u0026gt;  {{ T \u0026#34;article.wordCount\u0026#34; .WordCount }}  \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt;   在文件 i18n/zh-CN.yaml 中的 article 的部分里增加\n1 2   wordCount:  other: \u0026#34;{{ .Count }} 字\u0026#34;   增加站点总字数、上线时间统计 修改都在文件 layouts\\partials\\footer\\footer.html 中\n上线时间 在 \u0026lt;section class=\u0026quot;copyright\u0026quot;\u0026gt; 部分增加\n1 2 3 4 5 6 7 8  \u0026lt;section class=\u0026#34;copyright\u0026#34;\u0026gt;  \u0026amp;copy;  {{ if and (.Site.Params.footer.since) (ne .Site.Params.footer.since (int (now.Format \u0026#34;2006\u0026#34;))) }}  {{ .Site.Params.footer.since }} -  {{ end }}  {{ now.Format \u0026#34;2006\u0026#34; }} {{ .Site.Title }} \u0026lt;br /\u0026gt;  已运行 \u0026lt;i class=\u0026#34;fas fa-bell\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;a id=\u0026#34;days\u0026#34;\u0026gt;0\u0026lt;/a\u0026gt; 天 \u0026lt;/section\u0026gt;   在 \u0026lt;footer class=\u0026quot;site-footer\u0026quot;\u0026gt; 的最后添加\n1 2 3 4 5 6 7 8  \u0026lt;script\u0026gt;  var s1 = \u0026#39;2022-01-01\u0026#39;;  s1 = new Date(s1.replace(/-/g, \u0026#34;/\u0026#34;));  s2 = new Date();  var days = s2.getTime() - s1.getTime();  var number_of_days = parseInt(days / (1000 * 60 * 60 * 24));  document.getElementById(\u0026#39;days\u0026#39;).innerHTML = number_of_days; \u0026lt;/script\u0026gt;   站点总字数 在上线时间的后面添加就行\n1 2 3 4 5 6 7 8  已运行 \u0026lt;i class=\u0026#34;fas fa-bell\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;a id=\u0026#34;days\u0026#34;\u0026gt;0\u0026lt;/a\u0026gt; 天  {{$scratch := newScratch}}  {{ range (where .Site.Pages \u0026#34;Kind\u0026#34; \u0026#34;page\u0026#34; )}}  {{$scratch.Add \u0026#34;total\u0026#34; .WordCount}}  {{ end }}   ⌨ {{ div ($scratch.Get \u0026#34;total\u0026#34;) 1000.0 | lang.FormatNumber 2 }}k 字 🧠 {{ len (where .Site.RegularPages \u0026#34;Section\u0026#34; \u0026#34;post\u0026#34;) }} 篇文章 \u0026lt;/script\u0026gt;   优化 - 可通过配置文件设置  layouts\\partials\\footer\\footer.html 修改的部分  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  {{- $ThemeVersion := \u0026#34;3.8.0\u0026#34; -}} \u0026lt;footer class=\u0026#34;site-footer\u0026#34;\u0026gt;  \u0026lt;section class=\u0026#34;copyright\u0026#34;\u0026gt;  \u0026amp;copy;  {{ if and (.Site.Params.footer.since) (ne .Site.Params.footer.since (int (now.Format \u0026#34;2006\u0026#34;))) }}  {{ .Site.Params.footer.since }} -  {{ end }}  {{ now.Format \u0026#34;2006\u0026#34; }} {{ .Site.Title }}   {{ if .Site.Params.footer.RunDays.enabled }}  \u0026lt;br /\u0026gt;  {{ T \u0026#34;footer.runDays\u0026#34; }} \u0026lt;i class=\u0026#34;fas fa-bell\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;a id=\u0026#34;days\u0026#34;\u0026gt;0\u0026lt;/a\u0026gt; {{ T \u0026#34;footer.runDays1\u0026#34; }}  {{ end }}   {{ if .Site.Params.footer.articleTotalStatistics.enabled }}  \u0026amp;nbsp;\u0026amp;nbsp;  {{$scratch := newScratch}}  {{ range (where .Site.Pages \u0026#34;Kind\u0026#34; \u0026#34;page\u0026#34; )}}  {{$scratch.Add \u0026#34;total\u0026#34; .WordCount}}  {{ end }}   {{ .Site.Params.footer.articleTotalStatistics.totalArticleWordEmoji }}\u0026amp;nbsp;  {{ div ($scratch.Get \u0026#34;total\u0026#34;) 1000.0 | lang.FormatNumber 2 }}k\u0026amp;nbsp;  {{ T \u0026#34;footer.totalArticleWord\u0026#34; }}  \u0026amp;nbsp;\u0026amp;nbsp;  {{ .Site.Params.footer.articleTotalStatistics.totalArticleEmoji }}\u0026amp;nbsp;  {{ len (where .Site.RegularPages \u0026#34;Section\u0026#34; \u0026#34;post\u0026#34;) }}\u0026amp;nbsp;  {{ T \u0026#34;footer.totalArticle\u0026#34; }}  {{ end }}  \u0026lt;/section\u0026gt;   ...   {{ if .Site.Params.footer.RunDays.enabled }}  \u0026lt;script\u0026gt;  var s1 = \u0026#34;{{ .Site.Params.footer.RunDays.launchDate }}\u0026#34;;  s1 = new Date(s1.replace(/-/g, \u0026#34;/\u0026#34;));  s2 = new Date();  var days = s2.getTime() - s1.getTime();  var number_of_days = parseInt(days / (1000 * 60 * 60 * 24));  document.getElementById(\u0026#39;days\u0026#39;).innerHTML = number_of_days;  \u0026lt;/script\u0026gt;  {{ end }} \u0026lt;/footer\u0026gt;   i18n/zh-CN.yaml 中添加  1 2 3 4 5 6 7 8 9 10 11  footer:  runDays:  other: \u0026#34;已运行\u0026#34;  runDays1:  other: \u0026#34;天\u0026#34;   totalArticleWord:  other: \u0026#34;字\u0026#34;   totalArticle:  other: \u0026#34;篇文章\u0026#34;   config.yaml 中添加  1 2 3 4 5 6 7 8  footer  RunDays:  enabled: true  launchDate: \u0026#34;2022-01-01\u0026#34;  articleTotalStatistics:  enabled: true  totalArticleWordEmoji: ⌨  totalArticleEmoji: 🧠   屏蔽 Google Analytics 本地计数 修改 layouts/partials/head/head.html\n1 2 3  {{- if not .Site.IsServer }}  {{- template \u0026#34;_internal/google_analytics.html\u0026#34; . -}} {{- end }}   增加分类小部件 增加文件 layouts/partials/widget/categories.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  {{- $query := first 1 (where .Site.Pages \u0026#34;Layout\u0026#34; \u0026#34;==\u0026#34; \u0026#34;archives\u0026#34;) -}} {{- if $query -}}  {{- $archivesPage := index $query 0 -}}  \u0026lt;section class=\u0026#34;widget categories\u0026#34;\u0026gt;  \u0026lt;div class=\u0026#34;widget-icon-title\u0026#34;\u0026gt;  {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;stack-2\u0026#34; }} \u0026amp;nbsp;\u0026amp;nbsp;  \u0026lt;h2 class=\u0026#34;widget-title has-icon-section-title\u0026#34;\u0026gt;{{ T \u0026#34;widget.categories.title\u0026#34; }}\u0026lt;/h2\u0026gt;  \u0026lt;/div\u0026gt;  \u0026lt;div class=\u0026#34;widget-categories--list\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;widget\u0026#34;\u0026gt;  \u0026lt;h3 class=\u0026#34;widget-title\u0026#34;\u0026gt; {{ T \u0026#34;widget_categories\u0026#34; }}\u0026lt;/h3\u0026gt;  \u0026lt;div class=\u0026#34;widget-body\u0026#34;\u0026gt;  \u0026lt;div class=\u0026#34;category-list\u0026#34;\u0026gt;  {{- range $name, $taxonomy := $.Site.Taxonomies.categories }}  {{- with $.Site.GetPage (printf \u0026#34;/categories/%s\u0026#34; $name) }}  \u0026lt;div class=\u0026#34;category-list-item\u0026#34;\u0026gt;  \u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34; class=\u0026#34;category-list-link\u0026#34;\u0026gt;{{ $name }}\u0026lt;span class=\u0026#34;category-list-count\u0026#34;\u0026gt;{{ $taxonomy.Count}}\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;  \u0026lt;/div\u0026gt;  {{- end }}  {{- end }}  \u0026lt;/div\u0026gt;  \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt;  \u0026lt;/div\u0026gt;  \u0026lt;/section\u0026gt; {{- else -}}  {{- warnf \u0026#34;Archives page not found. Create a page with layout: archives.\u0026#34; -}} {{- end -}}   在文件 assets/scss/partials/widgets.scss 中增加\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  /* Categories widget */ .widget.categories {  .widget-categories--list {  border-radius: var(--card-border-radius);  box-shadow: var(--shadow-l1);  background-color: var(--card-background);  }   .category-list-item {  \u0026amp;:not(:last-of-type) {  border-bottom: 1.4px solid var(--card-separator-color);  }   a {  font-size: 1.4rem;  padding: 18px 25px;  display: flex;  justify-content: space-between;  color: var(--card-text-color-main);  }   span.category-list-count {  color: var(--card-text-color-tertiary);  }  } }   在文件 i18n/zh-CN.yaml 中 widget 的部分增加\n1 2 3  categories:  title:  other: 分类   增加是否需要文章头图的设置 将文件 layouts\\partials\\article\\components\\header.html 中\n1  {{ if $image.exists }}   (我这里是第 3 行) 改为\n1  {{ if and (.Site.Params.Article.showHeaderImage) ($image.exists) }}   再在文件 config.yaml 中 article 部分添加\n1 2 3 4 5  article:  math: false  toc: true  readingTime: true  showHeaderImage: true   文章显示左右侧边栏 未完待续\n修改友链的样式 修改样式 改为双栏 在文件 assets/scss/custom.scss 中添加\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  @media (min-width: 1024px) {  .article-list--compact.links {  display: grid;  grid-template-columns: 1fr 1fr;  background: none;  box-shadow: none;   article {  background: var(--card-background);  border: none;  box-shadow: var(--shadow-l2);  margin-bottom: 8px;  border-radius: 10px;   \u0026amp;:nth-child(odd) {  margin-right: 8px;  }  }  } }   修改分类的颜色 在 content\\categories 创建与分类同名的文件夹，并且在文件夹中创建 _index.md 文件并添加下面的内容\n1 2 3 4 5 6 7  title: \u0026#34;操作系统\u0026#34; //分类名称 description: \u0026#34;简介\u0026#34; // 分类简介，不需要可以删了 image: \u0026#34;categories.png\u0026#34; // 分类题图，也可以删了 style:  background: \u0026#34;#80aba9\u0026#34; //分类标签底色  color: \u0026#34;#fff\u0026#34; ---   参考资料 Hugo | 看中 Stack 主题的归档功能，搬家并做修改\nHugo | 另一篇 Stack 主题装修记录\nHugo | 第三篇 Stack 主题装修记录，堂堂再临！\nhugo主题stack\nHugo Stack 主题配置与使用\n博客装修：删删改改大胆行事（2022-01-27 Update）\nHugo Stack主題修改記錄 (瘦身篇) Hugo 永久链接\n图标\nTabler Icons (主题自带的图标来自这里)\nBootstrap Icons\nCreative Commons icon download (CC协议的图标下载) Logo Worldvectorlogo\nWix Create a Stunning Logo Design\nhugo 主题的基础\nhugo - 变量和参数\nhugo - 模板\ngolang 模板(template)的常用基本语法\n","date":"2022-02-23T00:00:00+08:00","permalink":"https://coderqs.github.io/2022/02/hugo-stack-%E4%B8%BB%E9%A2%98%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0/","title":"[Hugo] Stack 主题装修笔记"},{"content":"设置自动化部署 hugo 的步骤 创建 GitHub Token  从 GitHub 的 Token 页面 创建一个具有 repo 访问权限的 Token。生成后会获得一个 40 字符长的 Token，将这个 Token 保存好(注意：这个 Token 只会出现这一次，弄丢了是没办法找回的，只能重新生成)   创建 GitHub Page 仓库  在 GitHub 上创建一个名为 \u0026lt;username\u0026gt;.github.io 的仓库 在仓库里添加一个 index.html 文件，里面输入 Hello World 保存 在新的网页里访问 https://\u0026lt;username\u0026gt;.github.io 如果可以看到 Hello World 则仓库创建的没问题。  注：上面所有的 \u0026lt;username\u0026gt; 替换为自己的 GitHub 用户名。\n创建 Hugo 站点仓库  创建仓库，这一步没什么好说的，就是正常的创建一个普通的仓库(注：一定是要 public 仓库)。 在仓库中点击 Settings -\u0026gt; Secrets 填入第一步创建的 Token (可以通过 https://github.com/\u0026lt;username\u0026gt;/\u0026lt;repo-name\u0026gt;/settings/secrets 访问)。  克隆到本地。  创建 GitHub 操作  在 hugo 站点仓库中添加 .github/workflows/main.yml (main.yml 文件名没有限制)  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  name: CI on: push jobs:  deploy:  runs-on: ubuntu-20.04  steps:  - name: Git checkout  uses: actions/checkout@v2   - name: Update theme  # (Optional)If you have the theme added as submodule, you can pull it and use the most updated version  run: git submodule update --init --recursive   - name: Setup hugo  uses: peaceiris/actions-hugo@v2  with:  hugo-version: \u0026#34;0.64.0\u0026#34;  extended: true   - name: Build  # remove --minify tag if you do not need it  # docs: https://gohugo.io/hugo-pipes/minification/  run: hugo --minify   - name: Deploy  uses: peaceiris/actions-gh-pages@v3  with:  personal_token: ${{ secrets.TOKEN }}  external_repository: \u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io  publish_dir: ./public  # keep_files: true  user_name: \u0026lt;username\u0026gt;  user_email: \u0026lt;username@email.com\u0026gt;  publish_branch: master  # cname: example.com    在这 Git checkout 一步中，我们将获取包含 Hugo 站点的存储库的最新代码。 在这 Setup hugo 一步中，我们将使用 peaceiris/actions-hugo 来安装 Hugo。您需要指定要使用的 hugo 版本。建议使用本地机器的 hugo 版本（命令：）hugo version。 在这 Build 一步中，我们将使用 hugo --minify 命令构建静态内容。通过使用 --minify，我们将缩小站点中的资产。有关更多信息，请查看 hugo 文档。 最后 Deploy 一步。现在我们将部署最后一步的静态内容。我们将使用 peaceiris/actions-gh-pages 操作来运行部署。在这里，我们使用，external_repository: \u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io 因为否则静态内容将被推送到同一个 repo 中（在不同的分支中）。当我们指定外部存储库时，静态内容将被推送到 \u0026lt;username\u0026gt;.github.io. 对于这一步，我们将使用我们在第一步中指定的个人 Token。如果您取消注释 keep_files: true，则部署将保留旧文件 \u0026lt;username\u0026gt;.github.io，否则它将替换所有内容。最后，如果您有自定义域，则 cname 需要进行配置。有关更多信息，请查看 GitHub 市场中的文档。  添加 hugo 站点代码  创建 hugo 的结构，可以使用 hugo new site xxx 创建一个默认的站点目录，将其目录结构拷到仓库中。 如果添加了主题，可以考虑将其添加为子模块，这样在部署前能方便的将主题更新为最新的版本(上面的 main.yml 中的步骤 Update theme，已经实现了在部署之前更新主题的版本)，下面命令以主题 hugo-theme-stack 为例：  1  git submodule add https://github.com/CaiJimmy/hugo-theme-stack.git themes/stack   这时基本就都准备好了，但为了方便看效果，可以将主题中提供的示例部署出来。示例的路径在主题根路径下的 exampleSite 中(例如: themes/stack/exampleSite)，将里面的 content 和 config.yaml(或 config.toml)拷出来放在仓库的根路径下就行了。 提交代码。  hugo 的搭建与测试详细的内容可以查看参考资料资料中的内容，这里就不详细记录了。\n推送到 GitHub  执行 git push 将 hugo 站点代码推送到 GitHub，可以在 GitHub 对应的仓库页面上的 Actions 看到 Actions 的进度。   参考资料 Hugo：使用 GitHub Actions 部署静态站点\nGitHub Pages Action\n使用 Hugo 快速搭建个人博客记录\n知识共享 4.0 许可的明文版本\n","date":"2022-02-23T00:00:00+08:00","permalink":"https://coderqs.github.io/2022/02/hugo-%E4%BD%BF%E7%94%A8-github-actions-%E9%83%A8%E7%BD%B2-hugo-%E7%BD%91%E7%AB%99/","title":"[Hugo] 使用 GitHub Actions 部署 Hugo 网站"}]